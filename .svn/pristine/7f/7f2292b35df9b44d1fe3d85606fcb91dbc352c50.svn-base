<template>
<div class="app_update">
   <div class="app_update_setting">
     <div class="app_update_title">
       <div class="title">
          训练营
       </div> 
        <div class="btn" data-toggle="modal" data-target="#myModal" v-on:click="add">
          <img  src="/admin/images/app_index_add.png" /> 添加训练营
       </div>
     </div>
      
    <div class="training_table">
         <div class="row">
           
            <div class="col-md-3 " v-for="(vo, index) in upInfo" :key="index" v-if="vo.status !=0">
              <div class="case_list">
                <img :src="vo.training_cover_pc.value"/> 
                <div class="op">
                  <img src="/admin/images/base_edit.png" v-on:click="edit(vo.id)">
                  <img src="/admin/images/base_down.png" v-on:click="statusChange(vo.id,vo.status)">
                </div>
          
              </div>
              <div class="case_title">{{vo.training_name}}</div>
            </div>
 
        </div>    
    </div>
     <div class="base_title" style="margin: 20px 0; height: 30px;">
       <div class="title">
          已下架
       </div> 
   
     </div>
     <div class="training_table">
         <div class="row">
           
            <div class="col-md-3 " v-for="(vo, index) in downInfo" :key="index"  >
              <div class="case_list">
                <img :src="vo.training_cover_pc.value"/> 
                <div class="op">
                  <img src="/admin/images/base_edit.png" v-on:click="edit(vo.id)">
                   <img src="/admin/images/base_down.png" v-on:click="statusChange(vo.id,vo.status)">
                </div>
                <div class="op_bg"></div>
              </div>
              <div class="case_title">{{vo.training_name}}</div>
            </div>
 
        </div>    
    </div>


 
   </div>
 

<el-dialog title="创建训练营" :visible.sync="dialogAddVisible" width="60%">
    <trainAdd 
    :addInfo="addInfo" 
    :classIds="classIds" 
    v-on:setClassVisible = "setClassVisible"
    v-on:addSuccess="addSuccess"/>
</el-dialog>

<el-dialog title="编辑训练营" :visible.sync="dialogEditVisible" width="60%">
    <trainEdit 
    :addInfo="addInfo" 
    :classIds="classIds" 
    :imgs="imgs"
    :sections="sections"
    :editInfo="editInfo"
    :stage_map="stage_map"
    :stage_count="stage_count"
    :stage_pic="stage_pic"
    :stagePicInfo="stagePicInfo"
    v-on:setClassVisible = "setClassVisible"
    v-on:editSuccess="editSuccess"/>
</el-dialog>

<el-dialog title="选择课程" :visible.sync="dialogClassVisible">
    <selectClass 
    :classIds = "classIds"
    :classInfo = "classInfo"
    :classPage = "classPage"
    v-on:selectSuccess="selectSuccess"/>
</el-dialog>

 



</div>
</template>

<script>
import selectClass from '~/components/admin/training/selectClass';
import trainAdd from '~/components/admin/training/trainAdd';
import trainEdit from '~/components/admin/training/trainEdit';
export default {
  layout: 'admin',
  name: 'admin_body',
  components: {
      trainAdd,
      trainEdit,
      selectClass
    },
  data () {
    return {
      addInfo:{map_num:1,stage_count:'',stage_content:[],training_cover_app:{},training_cover_pc:{},status:1},
 
 
      status:[{id:"0",name:"全部"},{id:"1",name:"正常"},{id:"2",name:"否"}],
      feedBackType:[{id:"0",name:"全部"},{id:"1",name:"软件出错"},{id:"2",name:"账号申诉"}],
      pageInfo:{
        total:400,
        pageSizes:[10, 20, 30, 400],
        pageSize:10,
        currentPage:1
      },
      searchFilter:{tel:"",status:"1",type:"1",time1:'',time2:''},    
      dialogTableVisible: false,
      dialogClassVisible:false,
      dialogAddVisible: false,
      dialogEditVisible: false,
      formLabelWidth: '120px',
      saveAction:"",
      choose:null,
      classIds:[],
      classInfo:[],
      classPage:{},
      imgs:{},
      sections:[],
      editInfo:{},
      stage_map:[],
      stage_count:3,
      stage_pic:"",
      stagePicInfo:{stageValueArr:[],stageWhArr:[]}
 
    }
  },
  async asyncData({store}){
      let params = {url: "/manage/training/training_list",data:{page:1,psize:100}}
      let res  = await store.dispatch("adminHttpGet",params);
      var downIndex =0;
      var upIndex =0;
      var dataInfo = res.data.data
      var downInfo = []
      var upInfo = []
      for (var i in dataInfo) {
        if(dataInfo[i].status ==0) {
          downInfo[downIndex] = dataInfo[i]
           downIndex++
        }
        else {
           upInfo[upIndex] = dataInfo[i]
           upIndex++

        }

      }
 
      return {
        updateInfo: res.data.data,
        upInfo:upInfo,
        downInfo:downInfo,
        pageInfo:{
          total:res.data.total,
          pageSizes:[10, 20, 30, 400],
          pageSize:10,
          currentPage:parseInt(res.data.page),
        },
      }
  },
  async created () {
     
   
  },
  methods: {
    see:function(index) {
        this.choose = index
        this.saveAction = "edit"
        this.addInfo = this.updateInfo[index];
        console.log(this.addInfo);

        this.dialogTableVisible = true;
     },
    add:function(){
       
        this.saveAction = "add"
        this.addInfo = {map_num:1,stage_count:'',stage_content:[],training_cover_app:{},training_cover_pc:{},status:1}
        this.dialogAddVisible = true

     },
     async edit(id) {
        this.$set(this.stagePicInfo,'stageValueArr',[])
        this.dialogEditVisible = true; 
        this.saveAction = "edit"
        let params = {url: "/manage/training/training_edit_get",data:{training_id:id}}
        let res  = await this.$store.dispatch("adminHttpGet",params);     
        this.addInfo = res.data
        this.imgs.training_cover_app = res.data.training_cover_app
        this.imgs.training_cover_pc = res.data.training_cover_pc
        this.sections = []
        for (var  index in res.data.stage_content) {
             var ids = []
             var sec = []
             for(var i in res.data.stage_content[index].sections) {
                 ids.push(res.data.stage_content[index].sections[i].course_id)
                 sec[i]={}
                 sec[i].section_id = res.data.stage_content[index].sections[i].id
                 sec[i].course_id = res.data.stage_content[index].sections[i].course_id
             }
             res.data.stage_content[index].sections = sec
             if(ids.length>0) {
              let paramst = {url: "/manage/training/training_add_course_info",data:{course_ids:ids.join(",")}}
              let rest  = await this.$store.dispatch("adminHttpGet",paramst);
              this.$set(this.sections,index,rest.data)
             }
             
             //this.sections[index] = rest.data
        }
        this.editInfo = JSON.parse(JSON.stringify(this.addInfo))

        console.log(this.editInfo)

       let paramsm = {url: "/manage/training/training_map_list",data:{}}
       let resm  = await this.$store.dispatch("adminHttpGet",paramsm);
       this.stage_map =  resm.data
       let params_g = {url: "/manage/training/training_map_stage_list",data:{map_id:this.addInfo.map_num}}
       let res_g  = await this.$store.dispatch("adminHttpGet",params_g);
       this.stage_count = res_g.data
       this.stage_pic = res_g.data[0].stage_pic
       //this.stagePicInfo = res_g.data[0]
       var stageValueArr = res_g.data[0].stage_value.split(";")
       
       for(var i in res_g.data[0].stage_value.split(";")){
         this.$set(this.stagePicInfo.stageValueArr,i,stageValueArr[i].split(","))
       }
       this.$set(this.stagePicInfo,'stageWhArr',res_g.data[0].stage_wh.split(","))
    
       console.log(this.stagePicInfo.stageValueArr)
       
        
     },
     del:function(index) {
        this.updateInfo.splice(index,1)
     },
     addSuccess:function(res) {
          this.dialogAddVisible = res.visible;
          this.setData()
     },
     editSuccess:function(res) {
          this.dialogEditVisible = res.visible;
          this.setData()
 
     },
     selectSuccess:function(res) {
          this.dialogClassVisible = res.visible;
          if(res.action == "submit") {
            this.classIds = []
            for(var i=0;i <res.classIds.length; i++) {
              this.classIds.push(res.classIds[i]);
            }
          }
          console.log(this.classIds)
    
         
     },
     async setClassVisible(res) {
         let params = {url: "/manage/manage_course/course_list",data:{page:1,psize:10}}
         let rest  = await this.$store.dispatch("adminHttpGet",params);
         this.classPage={
            total:rest.data.total,
            pageSizes:[10, 20, 30, 400],
            pageSize:10,
            currentPage:parseInt(rest.data.page),
         }
         this.classInfo = rest.data.data
         this.classIds = res.classIds
 
         this.dialogClassVisible = res.visible;
     },
     async statusChange(id,status) {
        var msg = status==1?"下架":"上架"
        let params = {url: "/manage/training/training_status_change",data:{trainging_id:id}}
        let res  = await this.$store.dispatch("adminHttpPost",params);
        if(res.code==0) {
            this.$message({message: msg+'成功',type: 'success'});
            this.setData()
 
        }
        else {
          this.$message.error(msg+"失败")
        }
     },

 
     
    handleSizeChange(val) {
      console.log(`每页 ${val} 条`);
    },
    handleCurrentChange(val) {
      this.currentPage=val
      console.log(`当前页: ${val}`);
    },
    sortByKey: function(array, key) { //(数组、排序的列)
      return array.sort(function(a, b) {
        var x = a[key];
        var y = b[key];
        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
      })

    }, 
    handleAvatarSuccess(res, file,fileList) {
      this.addInfo.logo = URL.createObjectURL(file.raw); 
    },
    async setData() {
      console.log(this.upInfo)
      let params = {url: "/manage/training/training_list",data:{page:1,psize:100}}
      let res  = await this.$store.dispatch("adminHttpGet",params);
      this.updateInfo = res.data.data
      var downIndex =0;
      var upIndex =0;
      this.downInfo =[]
      this.upInfo = []
      for (var i in this.updateInfo) {
        if(this.updateInfo[i].status ==0) {
           this.$set(this.downInfo,downIndex,this.updateInfo[i]) 
           downIndex++
        }
        else {
            this.$set(this.upInfo,upIndex,this.updateInfo[i]) 
            upIndex++
        }
        

      }
 
      
      
    },




 
  },
  watch:{
  
  },
  mounted () {
     this.setData()
  },
  head () {
    return {
      title: "训练营",
      meta: [{
        hid: 'description',
        name: 'description',
        content: "123"
      }],
      link: [
          {
            href: '/admin/css/cropper.min.css',
            type: 'text/css',
            rel: 'stylesheet',
          },
        ],
        script: [
          {src: '/admin/js/cropper.min.js'},
        ]
    }
  }
}
</script>

