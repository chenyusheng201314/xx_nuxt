<template>
<div class="app_update">
  <div class="base_tab">
        <div :class="isBuy!=1?'tab hover':'tab'" v-on:click="setIsBuy(0)">企业课程</div>
        <div :class="isBuy==1?'tab hover':'tab'" v-on:click="setIsBuy(1)">已购买课程</div>
      </div>
   <div class="app_update_setting">
      
      <div class="table-responsive">
      
       <table class="table">
         <tbody>
         <tr>
          <th width="8%">序号</th>
          <th width="8%">课程封面图</th>
          <th width="8%">视频名称</th>
          <th width="8%" v-if="isBuy==1">主讲导师</th>
          <th width="8%" v-if="isBuy==1">单价</th>
          <th width="8%" v-if="isBuy==1">购买数量</th>
          <th width="8%">剩余数量</th>  
        </tr>
        </tbody>
      </table>
      <el-checkbox-group v-model="ids">
      <table class="table">
        <tbody v-if="isBuy!=1">
       
        <tr v-for="(vo, index) in updateInfo" :key="index">
          <td width="8%">{{index+1}}</td>
          <td width="8%"><img :src="vo.cover.value" v-if="vo.cover"  style="height: 60px" /></td>
          <td width="8%">{{vo.course_name}}</td>
          <td width="8%">不限</td>
        </tr>
        
        </tbody>

       <tbody v-else>
          <tr v-for="(vo, index) in updateInfo" :key="index">
            <td width="8%">{{index+1}}</td>
            <td width="8%"><img :src="vo.course.cover.value" v-if="vo.course.cover" style="height: 60px" /></td>
            <td width="8%">{{vo.course.course_name}}</td>
            <td width="8%"  v-if="isBuy==1">{{vo.course.teacher_name}}</td>
            <td width="8%"  v-if="isBuy==1">{{vo.course.price}}</td>
            <td width="8%"  v-if="isBuy==1">{{vo.course_count}}</td>
            <td width="8%">{{vo.course_left}}</td>
          </tr>        
        </tbody>
      </table>
      </el-checkbox-group>
    </div>
      
    <div class="page">
    <el-pagination
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="pageInfoC.currentPage"
      :page-sizes="pageInfoC.pageSizes"
      :page-size="pageInfoC.pageSize"
      layout="total, sizes, prev, pager, next, jumper"
      :total="pageInfoC.total">
    </el-pagination>
    </div>
   </div>
 
</div>
</template>
 

<script>

export default {
  layout: 'admin',
  name: 'admin_body',
  props:['company_id'],
  data () {
    return {
      allChecked:false,
      ids:[],
      idsAll:"",
      updateInfo:[],
      pageInfoC:{
            total:0,
            pageSizes:[10, 20, 30, 400],
            pageSize:20,
            currentPage:1,
      },
      status:[{id:1,title:"正常"},{id:2,title:"冻结"}],
      sex:[{id:1,title:"男"},{id:0,title:"女"}],
      searchFilter:{mobile:""},    
      dialogTableVisible: false,
      dialogFormVisible: false,
      formLabelWidth: '120px',
      isBuy:0,
    }
  },
  created(){
    
  },
  
  methods: {
    async getData(){
      this.searchFilter.page = this.pageInfoC.currentPage
      this.searchFilter.psize = this.pageInfoC.pageSize
      this.searchFilter.company_id = this.company_id
      let url = "/manage/company/company_course_list"
      if(this.isBuy == 1) {
        url = '/manage/company/company_course_buy_list'
      }
      let params = {url:url,data:this.searchFilter} 
      let res  = await this.$store.dispatch("adminHttpGet",params)
      this.updateInfo=res.data.data
      this.pageInfoC.total = res.data.total
      this.pageInfoC.currentPage = parseInt(res.data.page)     
    },
    setIsBuy(val) {
      this.updateInfo=[]
      this.isBuy = val
      this.getData()
    },
    handleSizeChange(val) {
      this.$set(this.pageInfoC,'pageSize',val);
      this.getData()
    },
    handleCurrentChange(val) {
      this.$set(this.pageInfoC,'currentPage',val);
      this.getData() 
    },
    remove(val) { 
      var index = this.ids.indexOf(val); 
      if (index > -1) { 
       this.ids.splice(index, 1); 
      } 
    },
    setAll() {
      if(this.allChecked == true) {
          for(var i in this.updateInfo){
            var index = this.ids.indexOf(this.updateInfo[i].id); 
            if (index == -1) { 
              this.ids.push(this.updateInfo[i].id);
            } 
          }
        　　
       }
    },
    save() {
      let res = {}
      res.visible = false
      if(this.allChecked == true) {
        res.ids = ["all"]
      }
      else {
        res.ids = this.ids
      }
      
      this.$emit('editSuccess',res) 
    },
    cancel:function(){
        var res={}
        res.visible = false
        res.ids = []
        this.$emit('editSuccess',res) 
     },
 
  },
 
  mounted () {
    this.getData()
 
  },
 
 
}
</script>

