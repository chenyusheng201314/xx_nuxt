<template>
  <div class="class-list">
    <topBg src="/images/test.png"></topBg>
    <localRoute :route="route_data"></localRoute>
    <!--分类-->
    <ul class="class-condition">
      <li>
        <span class="li-tit">课程分类：</span>
        <span class="li-choose-all" @click="choose_class('全部')" :class="{active:all_choose_type}">全部</span>
        <span class="li-choose" :class="{active:item.type}" v-for="(item,index) in class_list"
              @click="choose_class(item.con,index)" :key="index">{{item.sort_name}}</span>
      </li>
      <li>
        <span class="li-tit">优惠活动：</span>
        <span class="li-choose-all" @click="choose_discounts('全部')" :class="{active:all_discounts_type}">全部</span>
        <span class="li-choose" :class="{active:item.type}" v-for="(item,index) in discounts_list"
              @click="choose_discounts(item.con,index)" :key="index">{{item.con}}</span>
      </li>
      <li>
        <span class="li-tit">培训费用：</span>
        <span class="li-choose-all" @click="choose_price('全部')" :class="{active:all_price_type}">全部</span>
        <span class="li-choose" :class="{active:item.type}" v-for="(item,index) in price_list"
              @click="choose_price(item.con,index)" :key="index">{{item.con}}</span>
      </li>
    </ul>
    <div>
      <ul class="details-list">
        <li class="detail-class" @click="viea_skip(lesson.id)" v-for="(lesson,index) in lesson_list" :key="index"
            v-show="lesson.id !== -1">
          <img :src="lesson.cover" alt="" width="230" height="150">
          <p class="class-title">{{lesson.course_name}}</p>
          <p class="class-teacher">{{lesson.organization_teacher.realname}} |
            {{lesson.organization_teacher.title}}</p>
          <p class="class-teacher">
        <span class="class-num">
          <img src="/images/class/num.png" alt="" width="16" height="16">
          <span>{{lesson.section_num}}课时</span>
        </span>
            <span class="class-time">
          <img src="/images/class/time.png" alt="" width="16" height="16">
          <span>{{(lesson.media_time / 60).toFixed(2)}}分钟</span>
        </span>
          </p>
          <div class="class-price">
            <p class="now-price">
              <span>{{lesson.price}}</span>学币
            </p>
            <p class="old-price">
              <span>{{lesson.old_price}}</span>学币
            </p>
          </div>
        </li>
      </ul>
      <!--分页-->
      <div class="paging">
        <el-pagination
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :current-page="paging.currentPage"
          :page-sizes="paging.page_sizes"
          :page-size="paging.page_size"
          layout="prev, pager, next, sizes, jumper"
          :total="paging.total"
          :pager-count="5"
          v-loading.fullscreen.lock="fullscreenLoading"
        >
        </el-pagination>
      </div>
    </div>
  </div>
</template>

<script>
  import topBg from '@/components/topBg'
  import localRoute from '@/components/localRoute'

  export default {
    name: 'list',
    components: {
      topBg,
      localRoute
    },
    data() {
      return {
        type: 1,
        route_data: [{name: '享学科技网', path: '/'}, {name: '课程分类', path: '/class/list'}],
        // 现在位置
        now_class_list: '全部',
        // 全选
        all_choose_type: true,
        // 条件筛选课程分类
        class_list: [
          {con: '领导力学习', type: false},
          {con: '内训师', type: false},
          {con: '绩效改进', type: false},
          {con: '企业管理', type: false},
          {con: '公开课', type: false},
          {con: '企业内训TDF', type: false}
        ],
        // 条件筛选活动  1精品课程，2最新课程，3买一赠一，4折扣活动，5限时免费，6积分购
        discounts_list: [
          {con: '精品课程', type: false, num: 1},
          {con: '最新课程', type: false, num: 2},
          {con: '买一赠一', type: false, num: 3},
          {con: '折扣活动', type: false, num: 4},
          {con: '限时免费', type: false, num: 5},
          {con: '积分购', type: false, num: 6}
        ],
        // 条件筛选价格
        price_list: [
          {con: '100以下', type: false, min: '', max: 100},
          {con: '100-300', type: false, min: 100, max: 300},
          {con: '300-500', type: false, min: 300, max: 500},
          {con: '500-1000', type: false, min: 500, max: 1000},
          {con: '1000以上', type: false, min: 1000, max: ''}
        ],
        // 课程详细列表
        lesson_list: [
          {
            id: -1,
            cover: '',
            course_name: '',
            section_num: '',
            organization_teacher: {
              realname: '',
              title: '',
            },
            media_time: '',
            price: ''
          }
        ],
        // 分页信息
        paging: {
          currentPage: 1,  //当前页
          page_sizes:
            [10, 20, 30], //每页显示多少条下拉
          page_size:
            10,// 默认显示多少条
          total:
            50,  // 总条数
        }
        ,
        // 活动全选
        all_discounts_type: true,
        // 价格全选
        all_price_type:
          true,
        // 搜索信息
        search_info:
          {
            first_sort_id: '',
            activity_type: '',
            price_min: '',
            price_max: '',
          },
        // 加载动画
        fullscreenLoading: false,
      }
    },
    // 初始化数组
    async asyncData({store}) {
      // 获取课程分类
      let nav_req = {
        url: '/home/course/course_sort_list'
      };
      let nav_res = await store.dispatch('httpGet', nav_req);
      nav_res.data.forEach((val, key) => {
        val.type = false;
      });
      console.log('一级分类', nav_res);
      // 返回数组
      return {
        class_list: nav_res.data
      }
    },
    methods: {
      choose_now_list: function (val) {
        this.now_class_list = val
      },
      // 获取列表
      async get_list() {
        const that = this;
        that.fullscreenLoading = true;
        let req = {
          url: '/home/course/course_list',
          data: {
            page: that.paging.currentPage,
            psize: that.paging.page_size,
            first_sort_id: that.search_info.first_sort_id,
            activity_type: that.search_info.activity_type,
            price_min: that.search_info.price_min,
            price_max: that.search_info.price_max,
          }
        };
        let res = await that.$store.dispatch('httpGet', req);
        if (res) {
          that.fullscreenLoading = false;
        }
        console.log('列表', res);
        if (res.code === 0) {
          that.lesson_list = res.data.data;
          that.paging.total = res.data.total;
        } else {
          that.lesson_list = [
            {
              id: -1,
              cover: '',
              course_name: '',
              section_num: '',
              organization_teacher: {
                realname: '',
                title: '',
              },
              media_time: '',
              price: ''
            }
          ];
          that.paging.total = 10;
          this.$message.error(res.message);
        }
      },
      // 课程分类选择条件
      choose_class(val, index) {
        const that = this;
        // 当前课程
        that.choose_now_list(val);
        // 添加选择之后的效果
        if (val === "全部") {
          that.all_choose_type = true;
          that.class_list.forEach(function (v, key) {
            v.type = false;
          });
          that.search_info.first_sort_id = '';

        } else {
          that.all_choose_type = false;
          that.class_list.forEach(function (v, key) {
            if (key === index) {
              v.type = true;
              that.search_info.first_sort_id = v.id;
            } else {
              v.type = false;
            }
          });
        }
        that.get_list();
      },

      // 价格选择条件
      choose_price(val, index) {
        const that = this;
        const {price_list} = this;
        // 添加选择之后的效果
        if (val === "全部") {
          price_list.forEach(function (v, key) {
            v.type = false;
            that.all_price_type = true;
          });
          that.search_info.price_min = '';
          that.search_info.price_max = '';
        } else {
          that.all_price_type = false;
          price_list.forEach(function (v, key) {
            if (key === index) {
              v.type = true;
              that.search_info.price_max = v.max;
              that.search_info.price_min = v.min;
            } else {
              v.type = false;
            }
          });
        }
        that.get_list();
      },

      // 优惠活动选择条件
      choose_discounts(val, index) {
        const that = this;
        const {discounts_list} = this;
        // 添加选择之后的效果
        if (val === "全部") {
          discounts_list.forEach(function (v, key) {
            v.type = false;
            that.all_discounts_type = true;
          });
          that.search_info.activity_type = '';
        } else {
          that.all_discounts_type = false;
          discounts_list.forEach(function (v, key) {
            if (key === index) {
              v.type = true;
              that.search_info.activity_type = v.num;
            } else {
              v.type = false;
            }
          });
        }
        that.get_list();
      },
      // 详情页
      viea_skip(lesson_id) {
        this.$router.push({path: '/class/detail', query: {id: lesson_id}});
      },

      // 分页
      handleSizeChange(val) {
        this.paging.page_size = val;
        this.get_list();
      },
      handleCurrentChange(val) {
        this.paging.currentPage = val;
        this.get_list();
      }
    },
    mounted() {
      const that = this;
      // 跳转过来的分类
      that.type = this.$route.query.type;
      if (that.type === 'all') {
        that.now_class_list = '全部';
        that.search_info.first_sort_id = '';
      } else {
        this.all_choose_type = false;
        $.each(that.class_list, function (key, val) {
          if (key === parseInt(that.type)) {
            that.now_class_list = val.sort_name;
            val.type = true;
            that.search_info.first_sort_id = val.id;
          } else {
            val.type = false
          }
        });
      }
      that.get_list();
    }

  }
</script>

<style scoped>
  .class-list {
    width: 1250px;
    margin: 0 auto;
  }

  .class-condition {
    width: 1200px;
    height: auto;
    border: 1px solid #dcdcdc;
    padding: 0;
  }

  .class-condition li {
    height: 50px;
    line-height: 50px;
    border-bottom: 1px solid #dcdcdc;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    padding: 0 45px;
  }

  .class-condition li:last-child {
    border-bottom: none;
  }

  .class-condition li .li-tit {
    font-size: 15px;
    color: #333;
    font-weight: bold;
  }

  .class-condition li .li-choose-all {
    display: inline-block;
    border: 1px solid #ff6900;
    padding: 3px 5px;
    font-size: 15px;
    color: #ff6900;
    line-height: 15px;
    margin-right: 25px;
    cursor: pointer;
  }

  .class-condition li .li-choose {
    display: inline-block;
    font-size: 15px;
    color: #666;
    padding: 5px 8px;
    line-height: 15px;
    background: #fff;
    cursor: pointer;
    margin-right: 25px;
  }

  .class-condition li .li-choose:hover {
    background: #ff6900;
    color: #fff;
  }

  .class-condition li .active {
    background: #ff6900;
    color: #fff;
  }

  .details-list {
    width: 1250px;
    height: auto;
    overflow: hidden;
    padding: 25px;
    margin-left: -25px;
  }

  a:hover {
    text-decoration: none;
  }

  .detail-class {
    width: 230px;
    height: auto;
    overflow: hidden;
    border: 1px solid #dcdcdc;
    float: left;
    margin-left: 12px;
    margin-top: 13px;
    cursor: pointer;
    transition: all 0.2s linear;
    -webkit-transition: all 0.2s linear;
    -moz-transition: all 0.2s linear;
    -ms-transition: all 0.2s linear;
    -o-transition: all 0.2s linear;
  }

  .detail-class:nth-child(5n+1) {
    margin-left: 0;
  }

  .detail-class:hover {
    transform: scale(1.05);
    box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.4);
  }

  .detail-class .class-title {
    width: 230px;
    height: auto;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    padding: 0 10px;
    text-align: center;
    font-size: 15px;
    color: #333;
    margin-top: 10px;
    margin-bottom: 0;
  }

  .class-teacher {
    width: 230px;
    height: auto;
    white-space: nowrap;
    text-overflow: ellipsis;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    padding: 0 15px;
    color: #999;
    font-size: 12px;
    text-align: center;
    margin-top: 3px;
    margin-bottom: 0;
    overflow: hidden;
  }

  .class-teacher .class-num {
    float: left;
    margin-left: 5px;
  }

  .class-teacher .class-time {
    float: right;
    margin-right: 5px;
  }

  .class-teacher .class-num img, .class-teacher .class-time img {
    margin-right: 5px;
  }

  .class-price {
    width: 230px;
    height: auto;
    overflow: hidden;
    margin-top: 18px;
    margin-bottom: 8px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    padding: 0 20px;
  }

  .class-price .now-price {
    font-size: 15px;
    float: left;
    color: #ff6900;
    margin-bottom: 0;
  }

  .class-price .now-price span {
    font-size: 18px;
    margin-right: 5px;
  }

  .class-price .old-price {
    font-size: 15px;
    color: #999;
    float: right;
    text-decoration: line-through;
    margin-bottom: 0;
  }

  .paging {
    margin: 20px auto;
    text-align: center;
  }

  .paging .el-pagination .el-pager li, .el-pagination button, .el-pagination span:not([class*=suffix]) {
    min-width: 50px;
    height: 40px;
    line-height: 40px;
    font-size: 14px;
  }

  .el-pagination .el-select .el-input .el-input__inner {
    height: 40px;
  }

  .paging .el-pagination__sizes {
    margin-left: 20px;
  }
</style>
